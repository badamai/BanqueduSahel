Object subclass: #Client	instanceVariableNames: 'id nom prenom adresse perenom'	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueduSahel'!!Client methodsFor: 'operations'!transfererargent:aNumber a: unClient( self compte etat) ifFalse: [ Transcript show: 'Votre compte est fermé';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 				(self retirer: aNumber) 					ifTrue: [						(unClient depot: aNumber)								ifTrue: [^true]								ifFalse: [ ^false ]						]						]! !!Client methodsFor: 'operations'!deposerargent: aNumber	self compte etat		ifFalse: [^ false ].	aNumber < 1		ifTrue: [ ^ false ]		ifFalse: [ self compte montant: self compte+ aNumber.			^ true ]! !!Client methodsFor: 'operations'!retirerargent:aNumber  ( self compte etat) ifFalse: [ Transcript show: 'you are account is close';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 			(self compte montant > aNumber )			ifFalse: [ Transcript show: 'votre solde est insuffisant';cr.				^false]			ifTrue:[				(self compte) montant:(self compte - aNumber).				^true				]	 			]	! !!Client methodsFor: 'tests - line breaking'!depotargent: aNumber	self compte etat		ifFalse: [^ false ].	aNumber < 1		ifTrue: [ ^ false ]		ifFalse: [ self compte montant: self compte+ aNumber.			^ true ]! !!Client methodsFor: 'accesing'!compte	^ compte! !!Client methodsFor: 'accesing'!nom: anObject	nom := anObject! !!Client methodsFor: 'accesing'!adresse: anObject	adresse := anObject! !!Client methodsFor: 'accesing'!adresse	^ adresse! !!Client methodsFor: 'accesing'!id	^ id! !!Client methodsFor: 'accesing'!prenom: anObject	prenom := anObject! !!Client methodsFor: 'accesing'!prenom	^ prenom! !!Client methodsFor: 'accesing'!id: anObject	id := anObject! !!Client methodsFor: 'accesing'!compte: uncompteclient	compte := uncompteclient! !!Client methodsFor: 'accesing'!nom	^ nom! !!Client methodsFor: 'override'!initialize 	super initialize.	  nom:= ''.	prenom :=''.	adesse :=''.	  id:= 0.	  compte:= nil! !Object subclass: #Compte	instanceVariableNames: 'etatcompte montant numerocompte etat'	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueduSahel'!!Compte methodsFor: 'accessing'!montant:aNumbermontant:=aNumber ! !!Compte methodsFor: 'accessing'!etatcompte: aBoolean"Lfalse, pour le compte bloqué et àtrue , ipour le compte ouvert"	etatcompte := aBoolean! !!Compte methodsFor: 'accessing'!N! !!Compte methodsFor: 'accessing'!numerocompte:aNumbernumerocompte:=aNumber ! !!Compte methodsFor: 'initialize'!initialize	  montant:= 0.	  numerocompte:= 0.	  etatcompte:= true! !!Compte methodsFor: 'obtenir'!numerocompte^ numerocompte ! !!Compte methodsFor: 'obtenir'!montant^ montant! !!Compte methodsFor: 'obtenir'!etatcompte^ etatcompte ! !Object subclass: #banque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueduSahel'!!banque methodsFor: 'initialize'!initialize 	"comment stating purpose of message"		| compteList clientList|	super initialize.		 compteList:= OrderedCollection new.		  clientList:= OrderedCollection new.! !!banque methodsFor: 'accesing'!Compte:leCompte   Compte addFirst:leCompte! !!banque methodsFor: 'accesing'!Compte^Compte! !!banque methodsFor: 'accesing'!Client: leClientClient addFirst:leClient! !!banque methodsFor: 'accesing'!Client^Client! !